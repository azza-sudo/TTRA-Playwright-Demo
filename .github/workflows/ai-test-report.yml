name: AI Test Report Integration (Demo)

on:
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.47.2-noble  # match your Playwright version
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      # Single test run that produces BOTH HTML and JSON
      - name: Run Playwright Tests (HTML + JSON)
        run: |
          mkdir -p playwright-report
          # Playwright's JSON reporter prints to stdout; redirect it to file.
          # HTML reporter writes files into playwright-report/.
          npx playwright test --reporter=html,json > playwright-report/sample_results.json

          # Safety net if no tests ran / file missing
          if [ ! -s playwright-report/sample_results.json ]; then
            echo '{"status":"no-tests-or-failure","suites":[]}' > playwright-report/sample_results.json
          fi

      - name: Upload Playwright JSON
        uses: actions/upload-artifact@v4
        with:
          name: sample_results
          path: playwright-report/sample_results.json

      - name: Upload Playwright HTML
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: playwright-report/

  ai-agent:
    needs: e2e        # <-- fixed dependency
    runs-on: ubuntu-latest

    steps:
      - name: Checkout AI Agent Repository
        uses: actions/checkout@v4
        with:
          repository: azza-sudo/TestInsight-Agent
          path: testinsight

      - name: Download Test Results
        uses: actions/download-artifact@v4
        with:
          name: sample_results
          path: testinsight

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install AI Agent Dependencies
        working-directory: testinsight
        run: pip install -r requirements.txt

      - name: Run AI Analysis
        working-directory: testinsight
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          echo "Running TestInsight AI Agent..."
          python main.py sample_results.json

      - name: Upload AI Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-report
          path: testinsight/ai_report.json
